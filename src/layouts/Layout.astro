---
import Navbar from "../components/NavBar.astro";
import SideMenu from "../components/SideMenu.astro";
import "@fontsource/poppins/100.css";
import "@fontsource/poppins/100-italic.css";
import "@fontsource/poppins/200.css";
import "@fontsource/poppins/200-italic.css";
import "@fontsource/poppins/300.css";
import "@fontsource/poppins/300-italic.css";
import "@fontsource/poppins/400.css";
import "@fontsource/poppins/400-italic.css";
import "@fontsource/poppins/500.css";
import "@fontsource/poppins/500-italic.css";
import "@fontsource/poppins/600.css";
import "@fontsource/poppins/600-italic.css";
import "@fontsource/poppins/700.css";
import "@fontsource/poppins/700-italic.css";
import "@fontsource/poppins/800.css";
import "@fontsource/poppins/800-italic.css";
import "@fontsource/poppins/900.css";
import "../styles/markdown.scss";
import { ViewTransitions } from "astro:transitions";
import type {
  TransitionDirectionalAnimations,
} from "astro";

interface Props {
  title: string;
  redirectPath?: string;
}

const contentAnim: TransitionDirectionalAnimations = {
  forwards: {
    old: [
      {
        name: "astroFadeOut",
        duration: "10ms",
        easing: "cubic-bezier(0.4, 0, 1, 1)",
        fillMode: "both",
      },
    ],
    new: [
      {
        name: "astroFadeIn",
        duration: "10ms",
        easing: "cubic-bezier(0, 0, 0.2, 1)",
        delay: "90ms",
        fillMode: "both",
      },
      // {
      //   name: "astroSlideFromRight",
      //   duration: "200ms",
      //   easing: "cubic-bezier(0.4, 0, 0.2, 1)",
      //   fillMode: "both"
      // }
    ],
  },
  backwards: {
    old: [{ name: "astroFadeOut" }, { name: "astroSlideToRight" }],
    new: [{ name: "astroFadeIn" }, { name: "astroSlideFromLeft" }],
  },
};

const { title, redirectPath } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <>
      {
        redirectPath && (
          <meta
            http-equiv="refresh"
            content={`0; url=${
              redirectPath.endsWith("/") ? redirectPath : redirectPath + "/"
            }`}
          />
        )
      }
    </>
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="bg-background min-h-screen flex flex-col">
    <section class="col-span-2 sticky top-0 z-20 bg-background">
      <Navbar />
    </section>
    <section class="flex flex-1">
      <section transition:name="none">
        <SideMenu>
          <slot name="sidebar" />
        </SideMenu>
      </section>
      <section class="!text-text overflow-scroll flex-1" transition:animate={contentAnim}>
        <div class="p-8 min-[1256px]:w-[1000px] mx-auto markdown-root z-0">
          <slot />
        </div>
      </section>
    </section>
    <style is:global>
      html {
        box-sizing: border-box;
        font-size: 16px;
      }
    </style>
  </body>
</html>
